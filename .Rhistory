# Function to standardize ID format
standardize_oktmo <- function(id) {
# Handle missing values
if (is.na(id)) {
return(NA)
}
# Remove any existing non-digit characters
id <- gsub("[^0-9]", "", id)
# Check if the ID has length 2 (e.g., "01", "99")
if (nchar(id) == 2) {
return(id)  # Keep as is
}
# Check if the ID has length 7 (for cases like "3601000")
if (nchar(id) == 7) {
# Add a leading "0" to make it 8 characters
id <- paste0("0", id)
}
# Split the ID into the required format: "xx-xxx-xxx-xxx" by inserting "-"
formatted_id <- paste0(substr(id, 1, 2), "-", substr(id, 3, 5), "-", substr(id, 6, 8), "-000")
return(formatted_id)
}
df_2018$mun_name <- gsub(" - всего", "", df_2018$mun_name)
df_2018$mun_name <- trimws(df_2018$mun_name, which = "r")
unique(df_2018[nchar(df_2018$oktmo) < 3 | grepl("000000", df_2018$oktmo), ])
df_2018$oktmo <- gsub("44000000", "44", df_2018$oktmo)
df_2018[grepl("44", df_2018$oktmo) & nchar(df_2018$oktmo) == 2,]
df_2018$oktmo <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "11", df_2018$oktmo)
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
df_2018$oktmo_id <- sapply(df_2018$oktmo, standardize_oktmo)
df_2018[nchar(df_2018$oktmo) == 2 & !is.na(df_2018$oktmo),]
df_2018$oktmo <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "118", df_2018$oktmo)
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
df_2018$oktmo_id <- sapply(df_2018$oktmo, standardize_oktmo)
df_2018[nchar(df_2018$oktmo) == 2 & !is.na(df_2018$oktmo),]
df_2018[nchar(df_2018$oktmo) < 4 & !is.na(df_2018$oktmo),]
df_2018$oktmo <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "118",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "719", df_2018$oktmo)))
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
# Loop through each filtered sheet name and read its content
for (sheet in filtered_sheet_names) {
# Create a variable name based on the sheet name
var_name <- paste0("df_", sheet)  # Ensure it's a valid variable name
assign(var_name, read_excel(file_path, sheet = sheet, skip = 5, col_names = new_column_names), envir = .GlobalEnv)
}
df_2018$mun_name <- gsub(" - всего", "", df_2018$mun_name)
df_2018$mun_name <- trimws(df_2018$mun_name, which = "r")
unique(df_2018[nchar(df_2018$oktmo) < 3 | grepl("000000", df_2018$oktmo), ])
df_2018$oktmo <- gsub("44000000", "44", df_2018$oktmo)
df_2018[grepl("44", df_2018$oktmo) & nchar(df_2018$oktmo) == 2,]
df_2018$oktmo <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "118",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "719", df_2018$oktmo)))
df_2018$oktmo
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
df_2018$oktmo_mod <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "118",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "719", df_2018$oktmo)))
df_2018$oktmo <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "11",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "71",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "71", df_2018$oktmo)))
df_2018$oktmo_mod <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "118",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "719", df_2018$oktmo)))
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
df_2018$oktmo_id <- sapply(df_2018$oktmo, standardize_oktmo)
df_2018[nchar(df_2018$oktmo) < 4 & !is.na(df_2018$oktmo),]
regions_names <- df_2018[!is.na(df_2018$oktmo_id) & nchar(df_2018$oktmo_id) < 3 | grepl("Ненецкий автономный округ", df_2018$mun_name), ]
nrow(regions_names)
# Create the dictionary as a named vector
oktmo_dict <- setNames(regions_names$mun_name, regions_names$oktmo_mod)
oktmo_dict
df_2018$oktmo_mod
# Функция для обработки каждого датафрейма
process_data <- function(df, oktmo_dict) {
# Стандартизируем oktmo и создаем oktmo_id
#  df$oktmo <- gsub("44000000", "44", df$oktmo)
df$mun_name <- gsub(" - всего", "", df$mun_name)
df$mun_name <- trimws(df$mun_name, which = "r")
df$oktmo <- ifelse(df$mun_name == "Ненецкий автономный округ", "11", df$oktmo)
df$oktmo_id <- sapply(df$oktmo, standardize_oktmo)
# Назначаем region на основе oktmo_dict
# Применяем условие для назначения региона:
# Если длина oktmo_id меньше 3 символов, используем два первых символа,
# иначе — три первых символа
df$region <- ifelse(
nchar(df$oktmo_mod) == 3,
oktmo_dict[substr(df$oktmo_id, 1, 3)],
oktmo_dict[substr(df$oktmo_id, 1, 2)]
)
return(df)
}
# Создаем список всех датафреймов для обработки
dfs <- list(df_2018, df_2019, df_2020, df_2021, df_2022)
# Применяем функцию к каждому датафрейму в списке и сохраняем изменения
dfs <- lapply(dfs, process_data, oktmo_dict = oktmo_dict)
# Функция для обработки каждого датафрейма
process_data <- function(df, oktmo_dict) {
# Стандартизируем oktmo и создаем oktmo_id
#  df$oktmo <- gsub("44000000", "44", df$oktmo)
df$mun_name <- gsub(" - всего", "", df$mun_name)
df$mun_name <- trimws(df$mun_name, which = "r")
df$oktmo <- ifelse(df$mun_name == "Ненецкий автономный округ", "11", df$oktmo)
df$oktmo_mod <- ifelse(df$mun_name == "Ненецкий автономный округ", "118",
ifelse(df$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df$mun_name == "Ямало-Ненецкий автономный округ", "719", df$oktmo)))
df$oktmo_id <- sapply(df$oktmo, standardize_oktmo)
# Назначаем region на основе oktmo_dict
# Применяем условие для назначения региона:
# Если длина oktmo_id меньше 3 символов, используем два первых символа,
# иначе — три первых символа
df$region <- ifelse(
nchar(df$oktmo_mod) == 3,
oktmo_dict[substr(df$oktmo_id, 1, 3)],
oktmo_dict[substr(df$oktmo_id, 1, 2)]
)
return(df)
}
# Создаем список всех датафреймов для обработки
dfs <- list(df_2018, df_2019, df_2020, df_2021, df_2022)
# Применяем функцию к каждому датафрейму в списке и сохраняем изменения
dfs <- lapply(dfs, process_data, oktmo_dict = oktmo_dict)
# Разворачиваем список обратно в отдельные датафреймы
df_2018 <- dfs[[1]]
setdiff(regions_names %>% pull(mun_name), unique(df_2018$region))
df_2018 %>% filter(is.na(region))
# Create a variable name based on the sheet name
var_name <- paste0("df_", sheet)  # Ensure it's a valid variable name
# Load the readxl package
library(readxl)
library(dplyr)
library(ggplot2)
# First, specifying the path to Excel file
file_path <- "D:\\GitHubProjects\\causal_project\\Urov-14a_2010-2022.xlsx"
# Get the names of all sheets in the Excel file
sheet_names <- excel_sheets(file_path)
# Define the years of interest
years_of_interest <- as.character(2018:2022)
# Filter the sheet names to include only those that are in the specified range
filtered_sheet_names <- sheet_names[sheet_names %in% years_of_interest]
new_column_names <- c("id", "mun_name", "oktmo", "taxable_income", "social_payments", "income_payments_overall", "income_payments_pc")  # Adjust names as needed
# Loop through each filtered sheet name and read its content
for (sheet in filtered_sheet_names) {
# Create a variable name based on the sheet name
var_name <- paste0("df_", sheet)  # Ensure it's a valid variable name
assign(var_name, read_excel(file_path, sheet = sheet, skip = 5, col_names = new_column_names), envir = .GlobalEnv)
}
# Function to standardize ID format
standardize_oktmo <- function(id) {
# Handle missing values
if (is.na(id)) {
return(NA)
}
# Remove any existing non-digit characters
id <- gsub("[^0-9]", "", id)
# Check if the ID has length 2 (e.g., "01", "99")
if (nchar(id) == 2) {
return(id)  # Keep as is
}
# Check if the ID has length 7 (for cases like "3601000")
if (nchar(id) == 7) {
# Add a leading "0" to make it 8 characters
id <- paste0("0", id)
}
# Split the ID into the required format: "xx-xxx-xxx-xxx" by inserting "-"
formatted_id <- paste0(substr(id, 1, 2), "-", substr(id, 3, 5), "-", substr(id, 6, 8), "-000")
return(formatted_id)
}
df_2018$mun_name <- gsub(" - всего", "", df_2018$mun_name)
df_2018$mun_name <- trimws(df_2018$mun_name, which = "r")
unique(df_2018[nchar(df_2018$oktmo) < 3 | grepl("000000", df_2018$oktmo), ])
df_2018$oktmo <- gsub("44000000", "44", df_2018$oktmo)
df_2018[grepl("44", df_2018$oktmo) & nchar(df_2018$oktmo) == 2,]
df_2018$oktmo <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "11",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "71",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "71", df_2018$oktmo)))
df_2018$oktmo_mod <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "118",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "719", df_2018$oktmo)))
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
df_2018$oktmo_id <- sapply(df_2018$oktmo, standardize_oktmo)
df_2018[nchar(df_2018$oktmo) < 4 & !is.na(df_2018$oktmo),]
regions_names <- df_2018[!is.na(df_2018$oktmo_id) & nchar(df_2018$oktmo_id) < 3 | grepl("Ненецкий автономный округ", df_2018$mun_name), ]
nrow(regions_names)
# Create the dictionary as a named vector
oktmo_dict <- setNames(regions_names$mun_name, regions_names$oktmo_mod)
oktmo_dict
df_2018$region_test <- ifelse(
nchar(df_2018$oktmo_mod) == 3,
oktmo_dict[substr(df_2018$oktmo_id, 1, 3)],
oktmo_dict[substr(df_2018$oktmo_id, 1, 2)]
)
df_2018
df_2018 %>% filter(oktmo_mod == 3)
df_2018 %>% filter(oktmo_mod == "118")
df_2018$region_test <- ifelse(
nchar(df_2018$oktmo_mod) == 3,
oktmo_dict[substr(df_2018$oktmo_mod, 1, 3)],
oktmo_dict[substr(df_2018$oktmo_id, 1, 2)]
)
df_2018 %>% filter(oktmo_mod == "118")
df_2018 %>% filter(oktmo_mod == "718")
# Функция для обработки каждого датафрейма
process_data <- function(df, oktmo_dict) {
# Стандартизируем oktmo и создаем oktmo_id
#  df$oktmo <- gsub("44000000", "44", df$oktmo)
df$mun_name <- gsub(" - всего", "", df$mun_name)
df$mun_name <- trimws(df$mun_name, which = "r")
df$oktmo <- ifelse(df$mun_name == "Ненецкий автономный округ", "11", df$oktmo)
df$oktmo_mod <- ifelse(df$mun_name == "Ненецкий автономный округ", "118",
ifelse(df$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df$mun_name == "Ямало-Ненецкий автономный округ", "719", df$oktmo)))
df$oktmo_id <- sapply(df$oktmo, standardize_oktmo)
# Назначаем region на основе oktmo_dict
# Применяем условие для назначения региона:
# Если длина oktmo_id меньше 3 символов, используем два первых символа,
# иначе — три первых символа
df$region <- ifelse(
nchar(df$oktmo_mod) == 3,
oktmo_dict[substr(df$oktmo_mod, 1, 3)],
oktmo_dict[substr(df$oktmo_id, 1, 2)]
)
return(df)
}
# Создаем список всех датафреймов для обработки
dfs <- list(df_2018, df_2019, df_2020, df_2021, df_2022)
# Применяем функцию к каждому датафрейму в списке и сохраняем изменения
dfs <- lapply(dfs, process_data, oktmo_dict = oktmo_dict)
# Разворачиваем список обратно в отдельные датафреймы
df_2018 <- dfs[[1]]
df_2019 <- dfs[[2]]
df_2020 <- dfs[[3]]
df_2021 <- dfs[[4]]
df_2022 <- dfs[[5]]
setdiff(regions_names %>% pull(mun_name), unique(df_2018$region))
df_2018 %>% filter(is.na(region))
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
unique(df_2019$region)
unique(df_2020$region)
unique(df_2021$region)
unique(df_2022$region)
unique(df_2019$region)
unique(df_2020$region)
unique(df_2021$region)
unique(df_2022$region)
df_2018$year <- as.Date("2018-01-01")
df_2019$year <- as.Date("2019-01-01")
df_2020$year <- as.Date("2020-01-01")
df_2021$year <- as.Date("2021-01-01")
df_2022$year <- as.Date("2022-01-01")
View(df_2018)
df_2018 <- df_2018 %>% select(!c(oktmo_mod))
df_2018$mun_name <- gsub(" - всего", "", df_2018$mun_name)
df_2018$mun_name <- trimws(df_2018$mun_name, which = "r")
unique(df_2018[nchar(df_2018$oktmo) < 3 | grepl("000000", df_2018$oktmo), ])
# Load the readxl package
library(readxl)
library(dplyr)
library(ggplot2)
# First, specifying the path to Excel file
file_path <- "D:\\GitHubProjects\\causal_project\\Urov-14a_2010-2022.xlsx"
# Get the names of all sheets in the Excel file
sheet_names <- excel_sheets(file_path)
# Define the years of interest
years_of_interest <- as.character(2018:2022)
# Filter the sheet names to include only those that are in the specified range
filtered_sheet_names <- sheet_names[sheet_names %in% years_of_interest]
new_column_names <- c("id", "mun_name", "oktmo", "taxable_income", "social_payments", "income_payments_overall", "income_payments_pc")  # Adjust names as needed
# Loop through each filtered sheet name and read its content
for (sheet in filtered_sheet_names) {
# Create a variable name based on the sheet name
var_name <- paste0("df_", sheet)  # Ensure it's a valid variable name
assign(var_name, read_excel(file_path, sheet = sheet, skip = 5, col_names = new_column_names), envir = .GlobalEnv)
}
# Function to standardize ID format
standardize_oktmo <- function(id) {
# Handle missing values
if (is.na(id)) {
return(NA)
}
# Remove any existing non-digit characters
id <- gsub("[^0-9]", "", id)
# Check if the ID has length 2 (e.g., "01", "99")
if (nchar(id) == 2) {
return(id)  # Keep as is
}
# Check if the ID has length 7 (for cases like "3601000")
if (nchar(id) == 7) {
# Add a leading "0" to make it 8 characters
id <- paste0("0", id)
}
# Split the ID into the required format: "xx-xxx-xxx-xxx" by inserting "-"
formatted_id <- paste0(substr(id, 1, 2), "-", substr(id, 3, 5), "-", substr(id, 6, 8), "-000")
return(formatted_id)
}
#df_2018[grepl("44000000", df_2018$oktmo), ]
df_2018$mun_name <- gsub(" - всего", "", df_2018$mun_name)
df_2018$mun_name <- trimws(df_2018$mun_name, which = "r")
unique(df_2018[nchar(df_2018$oktmo) < 3 | grepl("000000", df_2018$oktmo), ])
df_2018$oktmo <- gsub("44000000", "44", df_2018$oktmo)
df_2018[grepl("44", df_2018$oktmo) & nchar(df_2018$oktmo) == 2,]
df_2018$oktmo <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "11",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "71",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "71", df_2018$oktmo)))
df_2018$oktmo_mod <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "118",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "719", df_2018$oktmo)))
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
df_2018$oktmo_id <- sapply(df_2018$oktmo, standardize_oktmo)
df_2018[nchar(df_2018$oktmo) < 4 & !is.na(df_2018$oktmo),]
regions_names <- df_2018[!is.na(df_2018$oktmo_id) & nchar(df_2018$oktmo_id) < 3 | grepl("Ненецкий автономный округ", df_2018$mun_name), ]
nrow(regions_names)
# Create the dictionary as a named vector
oktmo_dict <- setNames(regions_names$mun_name, regions_names$oktmo_mod)
df_2018$region_test <- ifelse(
nchar(df_2018$oktmo_mod) == 3,
oktmo_dict[substr(df_2018$oktmo_mod, 1, 3)],
oktmo_dict[substr(df_2018$oktmo_id, 1, 2)]
)
df_2018 %>% filter(oktmo_mod == "718")
# Функция для обработки каждого датафрейма
process_data <- function(df, oktmo_dict) {
# Стандартизируем oktmo и создаем oktmo_id
#  df$oktmo <- gsub("44000000", "44", df$oktmo)
df$mun_name <- gsub(" - всего", "", df$mun_name)
df$mun_name <- trimws(df$mun_name, which = "r")
df$oktmo <- ifelse(df$mun_name == "Ненецкий автономный округ", "11", df$oktmo)
df$oktmo_mod <- ifelse(df$mun_name == "Ненецкий автономный округ", "118",
ifelse(df$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df$mun_name == "Ямало-Ненецкий автономный округ", "719", df$oktmo)))
df$oktmo_id <- sapply(df$oktmo, standardize_oktmo)
# Назначаем region на основе oktmo_dict
# Применяем условие для назначения региона:
# Если длина oktmo_id меньше 3 символов, используем два первых символа,
# иначе — три первых символа
df$region <- ifelse(
nchar(df$oktmo_mod) == 3,
oktmo_dict[substr(df$oktmo_mod, 1, 3)],
oktmo_dict[substr(df$oktmo_id, 1, 2)]
)
return(df)
}
# Создаем список всех датафреймов для обработки
dfs <- list(df_2018, df_2019, df_2020, df_2021, df_2022)
# Применяем функцию к каждому датафрейму в списке и сохраняем изменения
dfs <- lapply(dfs, process_data, oktmo_dict = oktmo_dict)
# Разворачиваем список обратно в отдельные датафреймы
df_2018 <- dfs[[1]]
df_2019 <- dfs[[2]]
df_2020 <- dfs[[3]]
df_2021 <- dfs[[4]]
df_2022 <- dfs[[5]]
setdiff(regions_names %>% pull(mun_name), unique(df_2018$region))
df_2018 %>% filter(is.na(region))
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
unique(df_2019$region)
unique(df_2020$region)
unique(df_2021$region)
unique(df_2022$region)
df_2018$year <- as.Date("2018-01-01")
df_2019$year <- as.Date("2019-01-01")
df_2020$year <- as.Date("2020-01-01")
df_2021$year <- as.Date("2021-01-01")
df_2022$year <- as.Date("2022-01-01")
df_2018 <- df_2018 %>% select(!c(oktmo_mod))
View(df_2018)
# Load the readxl package
library(readxl)
library(dplyr)
library(ggplot2)
# First, specifying the path to Excel file
file_path <- "D:\\GitHubProjects\\causal_project\\Urov-14a_2010-2022.xlsx"
# Get the names of all sheets in the Excel file
sheet_names <- excel_sheets(file_path)
# Define the years of interest
years_of_interest <- as.character(2018:2022)
# Filter the sheet names to include only those that are in the specified range
filtered_sheet_names <- sheet_names[sheet_names %in% years_of_interest]
new_column_names <- c("id", "mun_name", "oktmo", "taxable_income", "social_payments", "income_payments_overall", "income_payments_pc")  # Adjust names as needed
# Loop through each filtered sheet name and read its content
for (sheet in filtered_sheet_names) {
# Create a variable name based on the sheet name
var_name <- paste0("df_", sheet)  # Ensure it's a valid variable name
assign(var_name, read_excel(file_path, sheet = sheet, skip = 5, col_names = new_column_names), envir = .GlobalEnv)
}
# Function to standardize ID format
standardize_oktmo <- function(id) {
# Handle missing values
if (is.na(id)) {
return(NA)
}
# Remove any existing non-digit characters
id <- gsub("[^0-9]", "", id)
# Check if the ID has length 2 (e.g., "01", "99")
if (nchar(id) == 2) {
return(id)  # Keep as is
}
# Check if the ID has length 7 (for cases like "3601000")
if (nchar(id) == 7) {
# Add a leading "0" to make it 8 characters
id <- paste0("0", id)
}
# Split the ID into the required format: "xx-xxx-xxx-xxx" by inserting "-"
formatted_id <- paste0(substr(id, 1, 2), "-", substr(id, 3, 5), "-", substr(id, 6, 8), "-000")
return(formatted_id)
}
#df_2018[grepl("44000000", df_2018$oktmo), ]
df_2018$mun_name <- gsub(" - всего", "", df_2018$mun_name)
df_2018$mun_name <- trimws(df_2018$mun_name, which = "r")
unique(df_2018[nchar(df_2018$oktmo) < 3 | grepl("000000", df_2018$oktmo), ])
df_2018$oktmo <- gsub("44000000", "44", df_2018$oktmo)
df_2018[grepl("44", df_2018$oktmo) & nchar(df_2018$oktmo) == 2,]
df_2018$oktmo <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "11",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "71",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "71", df_2018$oktmo)))
df_2018$oktmo_mod <- ifelse(df_2018$mun_name == "Ненецкий автономный округ", "118",
ifelse(df_2018$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df_2018$mun_name == "Ямало-Ненецкий автономный округ", "719", df_2018$oktmo)))
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
df_2018$oktmo_id <- sapply(df_2018$oktmo, standardize_oktmo)
df_2018[nchar(df_2018$oktmo) < 4 & !is.na(df_2018$oktmo),]
regions_names <- df_2018[!is.na(df_2018$oktmo_id) & nchar(df_2018$oktmo_id) < 3 | grepl("Ненецкий автономный округ", df_2018$mun_name), ]
nrow(regions_names)
# Create the dictionary as a named vector
oktmo_dict <- setNames(regions_names$mun_name, regions_names$oktmo_mod)
df_2018$region_test <- ifelse(
nchar(df_2018$oktmo_mod) == 3,
oktmo_dict[substr(df_2018$oktmo_mod, 1, 3)],
oktmo_dict[substr(df_2018$oktmo_id, 1, 2)]
)
df_2018 %>% filter(oktmo_mod == "718")
# Функция для обработки каждого датафрейма
process_data <- function(df, oktmo_dict) {
# Стандартизируем oktmo и создаем oktmo_id
#  df$oktmo <- gsub("44000000", "44", df$oktmo)
df$mun_name <- gsub(" - всего", "", df$mun_name)
df$mun_name <- trimws(df$mun_name, which = "r")
df$oktmo <- ifelse(df$mun_name == "Ненецкий автономный округ", "11", df$oktmo)
df$oktmo_mod <- ifelse(df$mun_name == "Ненецкий автономный округ", "118",
ifelse(df$mun_name == "Ханты-Мансийский автономный округ", "718",
ifelse(df$mun_name == "Ямало-Ненецкий автономный округ", "719", df$oktmo)))
df$oktmo_id <- sapply(df$oktmo, standardize_oktmo)
# Назначаем region на основе oktmo_dict
# Применяем условие для назначения региона:
# Если длина oktmo_id меньше 3 символов, используем два первых символа,
# иначе — три первых символа
df$region <- ifelse(
nchar(df$oktmo_mod) == 3,
oktmo_dict[substr(df$oktmo_mod, 1, 3)],
oktmo_dict[substr(df$oktmo_id, 1, 2)]
)
return(df)
}
# Создаем список всех датафреймов для обработки
dfs <- list(df_2018, df_2019, df_2020, df_2021, df_2022)
# Применяем функцию к каждому датафрейму в списке и сохраняем изменения
dfs <- lapply(dfs, process_data, oktmo_dict = oktmo_dict)
# Разворачиваем список обратно в отдельные датафреймы
df_2018 <- dfs[[1]]
df_2019 <- dfs[[2]]
df_2020 <- dfs[[3]]
df_2021 <- dfs[[4]]
df_2022 <- dfs[[5]]
setdiff(regions_names %>% pull(mun_name), unique(df_2018$region))
df_2018 %>% filter(is.na(region))
df_2018[grepl("Ненецкий автономный округ", df_2018$mun_name), ]
unique(df_2019$region)
unique(df_2020$region)
unique(df_2021$region)
unique(df_2022$region)
df_2018$year <- as.Date("2018-01-01")
df_2019$year <- as.Date("2019-01-01")
df_2020$year <- as.Date("2020-01-01")
df_2021$year <- as.Date("2021-01-01")
df_2022$year <- as.Date("2022-01-01")
df_2018 <- df_2018 %>% select(!c(region_test))
View(df_2018)
View(df_2019)
View(df_2022)
setwd('D:\\GitHubProjects\\causal_project')
sberindex_data <- read_excel("t_dict_municipal\\t_dict_municipal_districts.xlsx")
sberindex_data_2018 <- sberindex_data[sberindex_data$year_from <= 2018 & sberindex_data$year_to > 2018, ]
nrow(sberindex_data_2018)
sberindex_data_2019 <- sberindex_data[sberindex_data$year_from <= 2019 & sberindex_data$year_to > 2019, ]
nrow(sberindex_data_2019)
summary(sberindex_data_2019$year_to)
sberindex_data_2020 <- sberindex_data[sberindex_data$year_from <= 2020 & sberindex_data$year_to > 2020, ]
nrow(sberindex_data_2020)
summary(sberindex_data_2020$year_to)
sberindex_data_2021 <- sberindex_data[sberindex_data$year_from <= 2021 & sberindex_data$year_to > 2021, ]
sberindex_data_2022 <- sberindex_data[sberindex_data$year_from <= 2022 & sberindex_data$year_to > 2022, ]
df2018_stats <- df_2018 %>% filter(nchar(oktmo_id) > 2 & !(mun_name == "Муниципальные районы" |
mun_name == "Городские округа" | mun_name == "Административные районы")) %>%
rename(oktmo_raw = oktmo,
oktmo = oktmo_id)
df2019_stats <- df_2019 %>% filter(nchar(oktmo_id) > 2 & !(mun_name == "Муниципальные районы" |
mun_name == "Городские округа" | mun_name == "Административные районы")) %>%
rename(oktmo_raw = oktmo,
oktmo = oktmo_id)
df2020_stats <- df_2020 %>% filter(nchar(oktmo_id) > 2 & !(mun_name == "Муниципальные районы" |
mun_name == "Городские округа" | mun_name == "Административные районы")) %>%
rename(oktmo_raw = oktmo,
oktmo = oktmo_id)
df2021_stats <- df_2021 %>% filter(nchar(oktmo_id) > 2 & !(mun_name == "Муниципальные районы" |
mun_name == "Городские округа" | mun_name == "Административные районы")) %>%
rename(oktmo_raw = oktmo,
oktmo = oktmo_id)
df2022_stats <- df_2022 %>% filter(nchar(oktmo_id) > 2 & !(mun_name == "Муниципальные районы" |
mun_name == "Городские округа" | mun_name == "Административные районы")) %>%
rename(oktmo_raw = oktmo,
oktmo = oktmo_id)
df2018_stats
